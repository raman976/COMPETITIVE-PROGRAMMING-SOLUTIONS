// 830. Positions of Large Groups
// Solved
// Easy
// Topics
// premium lock iconCompanies

// In a string s of lowercase letters, these letters form consecutive groups of the same character.

// For example, a string like s = "abbxxxxzyy" has the groups "a", "bb", "xxxx", "z", and "yy".

// A group is identified by an interval [start, end], where start and end denote the start and end indices (inclusive) of the group. In the above example, "xxxx" has the interval [3,6].

// A group is considered large if it has 3 or more characters.

// Return the intervals of every large group sorted in increasing order by start index.

 

// Example 1:

// Input: s = "abbxxxxzzy"
// Output: [[3,6]]
// Explanation: "xxxx" is the only large group with start index 3 and end index 6.

// Example 2:

// Input: s = "abc"
// Output: []
// Explanation: We have groups "a", "b", and "c", none of which are large groups.

// Example 3:

// Input: s = "abcdddeeeeaabbbcd"
// Output: [[3,5],[6,9],[12,14]]
// Explanation: The large groups are "ddd", "eeee", and "bbb".

 

// Constraints:

//     1 <= s.length <= 1000
//     s contains lowercase English letters only.

 







class Solution {
public:
    vector<vector<int>> largeGroupPositions(string s) {
        vector<vector<int>> res;
        int n = s.size();
        int start = 0; // start index of current group

        for (int i = 0; i <= n; i++) {
            // When current character is different from the previous one or end of string
            if (i == n || s[i] != s[start]) {
                if (i - start >= 3) {
                    res.push_back({start, i - 1});
                }
                start = i; // update start to current index
            }
        }

        return res;
    }
};
